Test cases for the module say_my_name module
=============================================
Using the function in the module
==============================================
Import the function of the module
	>>> say_my_name = __import__('3-say_my_name').say_my_name

Using an integer as an argument(first_name=12, last_name=""):
	>>> say_my_name(12)
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

Using a string with last_name integer(first_name="John", last_name="12"):
	>>> say_my_name("John", "12")
	My name is John 12

Pass two empty strings(first_name="c", last_name="p"):
	>>> say_my_name("c", "p")
	My name is c p

Using a list as an argument(first_name=[1, 2], last_name=""):
	>>> say_my_name([1, 2])
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

Pass a float as an argument(first_name=10.6, last_name=""):
	>>> say_my_name(10.6)
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

Using two strings(first_name="Dickson", last_name="Wachai"):
	>>> say_my_name("Dickson", "Wachai")
	My name is Dickson Wachai

Passing no argument:
	>>> say_my_name()
	Traceback (most recent call last):
		...
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Using None as an argument:
	>>> say_my_name(None)
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

Using a list as an argument on last_name:
	>>> say_my_name("Bruno", ["Portugal", "Man United"])
	Traceback (most recent call last):
		...
	TypeError: last_name must be a string

Using a dictionary and float as arguments:
	>>> say_my_name({"Verstappen": 1, "Norris": 4}, 20.2)
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string
